// automatically generated by the FlatBuffers compiler, do not modify

package domain.flatbuffers;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class User extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static User getRootAsUser(ByteBuffer _bb) { return getRootAsUser(_bb, new User()); }
  public static User getRootAsUser(ByteBuffer _bb, User obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public User __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String destription() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer destriptionAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer destriptionInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public long id() { int o = __offset(6); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public domain.flatbuffers.Location location() { return location(new domain.flatbuffers.Location()); }
  public domain.flatbuffers.Location location(domain.flatbuffers.Location obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public String name() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  public String screenName() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer screenNameAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer screenNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  public String url() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer urlAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer urlInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }

  public static int createUser(FlatBufferBuilder builder,
      int destriptionOffset,
      long id,
      int locationOffset,
      int nameOffset,
      int screenNameOffset,
      int urlOffset) {
    builder.startTable(6);
    User.addUrl(builder, urlOffset);
    User.addScreenName(builder, screenNameOffset);
    User.addName(builder, nameOffset);
    User.addLocation(builder, locationOffset);
    User.addId(builder, id);
    User.addDestription(builder, destriptionOffset);
    return User.endUser(builder);
  }

  public static void startUser(FlatBufferBuilder builder) { builder.startTable(6); }
  public static void addDestription(FlatBufferBuilder builder, int destriptionOffset) { builder.addOffset(0, destriptionOffset, 0); }
  public static void addId(FlatBufferBuilder builder, long id) { builder.addInt(1, (int)id, (int)0L); }
  public static void addLocation(FlatBufferBuilder builder, int locationOffset) { builder.addOffset(2, locationOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(3, nameOffset, 0); }
  public static void addScreenName(FlatBufferBuilder builder, int screenNameOffset) { builder.addOffset(4, screenNameOffset, 0); }
  public static void addUrl(FlatBufferBuilder builder, int urlOffset) { builder.addOffset(5, urlOffset, 0); }
  public static int endUser(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public User get(int j) { return get(new User(), j); }
    public User get(User obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

